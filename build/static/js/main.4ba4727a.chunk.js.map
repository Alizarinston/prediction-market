{"version":3,"sources":["containers/000_01_AE_Aeneas.png","components/Market.js","containers/MarketListView.js","containers/MarketDetailView.js","settings.js","components/Countdown.js","components/Proposal.js","components/DynamicForm.js","components/Form.js","websocket_anon.js","websocket.js","containers/ProposalListView.js","containers/chart/Chart.js","containers/chart/intro.js","containers/OrderBook/OrderBookHistory.js","components/OrderForm.js","containers/OutcomeListView.js","store/actions/auth.js","store/actions/actionTypes.js","containers/Login.js","containers/ProposalDetailView.js","containers/ProposalCreateView.js","containers/Signup.js","containers/Home.js","hoc/hoc.js","routes.js","containers/Layout.js","App.js","serviceWorker.js","store/utility.js","store/reducers/auth.js","index.js"],"names":["module","exports","Markets","props","data","map","item","Segment","key","name","href","id","Header","as","attached","inverted","Image","src","size","Progress","percent","Date","now","getDate","end_date","color","a","b","Rail","dividing","position","React","Component","MarketDetail","state","market","newProps","token","axios","defaults","headers","Authorization","marketID","this","match","params","get","then","res","setState","catch","error","console","log","Grid","centered","columns","Column","title","description","HOST_URL","connect","auth","SOCKET_URL","Countdown","days","hours","min","sec","interval","setInterval","date","calculateCountdown","stop","endDate","diff","parse","timeLeft","years","Math","floor","clearInterval","value","String","length","countDown","Icon","addLeadingZeros","defaultProps","Proposals","k","to","pathname","Card","link","fluid","style","border","boxShadow","textAlign","padded","basic","Container","transition","margin","fontFamily","fontSize","fontWeight","letterSpacing","close","FormItem","Form","Item","uuid","DynamicFieldSet","remove","form","keys","getFieldValue","setFieldsValue","filter","add","nextKeys","concat","getFieldDecorator","initialValue","formItems","Field","required","validateTrigger","rules","whitespace","message","Input","placeholder","width","marginRight","className","disabled","onClick","type","WrappedDynamicFieldSet","create","CustomForm","anon","datesRange","err","success","stateValue","handleSelectChange","e","onChange","event","checked","handleChange","hasOwnProperty","handleFormSubmit","requestType","preventDefault","target","elements","category","start_date","substring","out","outcomes","i","undefined","push","post","onSubmit","dateFormat","iconPosition","TextArea","minHeight","Checkbox","toggle","label","Select","options","text","Button","htmltype","btnText","Message","header","content","WebSocketService","callbacks","socketRef","instance","channel","path","WebSocket","onopen","sendMessage","onmessage","socketNewMessage","onerror","onclose","wasClean","parsedData","JSON","command","Object","market_data","market_orders","messages","username","from","authCallback","send","stringify","readyState","WebSocketInstance","getInstance","userID","cash","wallet","ProposalList","contextRef","createRef","proposals","results","PublicWebSocketInstance","Ref","innerRef","Sticky","context","offset","Proposal","CandleStickChartForDiscontinuousIntraDay","initialData","ratio","discontinuousTimeScaleProvider","inputDateAccessor","d","xScaleProvider","xScale","xAccessor","displayXAccessor","xExtents","last","max","height","left","right","top","bottom","seriesName","yExtents","volume","origin","w","h","axisAt","orient","ticks","tickFormat","format","at","displayFormat","yAccessor","fill","open","itemType","edgeAt","high","low","padding","rectWidth","timeFormat","xDisplayFormat","fitWidth","temp","bar","dir","unit_price","price","amount","ChartComponent","orders","x","parseInt","outcome","dict","minutes","start","created","getTime","end","num_intervals","forEach","f","obj","nextProps","test","prevProps","Chart","round","exp","isNaN","NaN","toString","split","decimalAdjust","OrderHistory","num","filtered","overflowY","Table","striped","Row","HeaderCell","ord","Body","Cell","getHours","getMinutes","order_type","OrderForm","orderType","quantity","user","response","divided","descr","OutcomeList","colors","o","Group","labeled","vertical","active","handler","Label","parseFloat","probability","toFixed","tag","authSuccess","authFail","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","LoginForm","password","handleSubmit","login","loading","verticalAlign","maxWidth","Fragment","stacked","icon","xsrfHeaderName","xsrfCookieName","expirationDate","setItem","authLogin","ProposalDetail","proposal","addCallbacks","setMessages","bind","proposalID","floated","stretched","ProposalCreate","RegistrationForm","email","password1","password2","signup","authSignup","getWidth","window","Responsive","onlyTablet","minWidth","innerWidth","DesktopContainer","hideFixedMenu","fixed","showFixedMenu","children","Visibility","once","onBottomPassed","onBottomPassedReverse","MobileContainer","handleSidebarHide","sidebarOpened","handleToggle","Sidebar","Pushable","onlyMobile","ResponsiveContainer","HomepageLayout","container","stackable","bordered","rounded","logo","Hoc","BaseRouter","exact","component","Login","Signup","CustomLayout","authenticated","Menu","withRouter","App","setProfile","isAuthenticated","onTryAutoSignup","getItem","actions","Boolean","location","hostname","updateObject","oldObject","updatedProperties","initialState","authStart","action","authLogout","authUpdate","reducer","composeEnhances","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","authReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4ba4727a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/000_01_AE_Aeneas.64282989.png\";","import React from 'react';\nimport { Image, Rail, Segment, Header, Progress } from 'semantic-ui-react'\n\n\nconst Markets = (props) => {\n\n    function checkColor(a, b) {\n        if (a < b) {\n            return \"yellow\"\n        } else {\n            return \"green\"\n        }\n    }\n\n    return (\n\n        <div>\n\n            {props.data.map(item => (\n                <Segment key={item.name}>\n\n                    {\n                        <a href={`/markets/${item.id}`}>\n                            <Header as='h2' attached='top' inverted>\n                                {item.name}\n                            </Header>\n                        </a>\n                    }\n\n                    <Image src='https://gw.alipayobjects.com/zos/rmsportal/mqaQswcyDLcXyDKnZfES.png' size=\"small\" />\n\n                    <Progress percent={new Date(Date.now()).getDate() * 100 / new Date(item.end_date).getDate()}\n                              attached={\"bottom\"}\n                              color={checkColor(new Date(Date.now()).getDate(), new Date(item.end_date).getDate())}/>\n\n                    <Rail dividing position='right'>\n                        <Segment>Right Rail Content</Segment>\n                    </Rail>\n\n                </Segment>\n            ))}\n\n        </div>\n\n    )\n};\n\nexport default Markets;","import React, {createRef} from 'react';\nimport axios from 'axios';\n// import { connect } from 'react-redux';\nimport Markets from '../components/Market';\nimport {Grid, Rail, Sticky, Menu, Dropdown, Ref} from \"semantic-ui-react\";\n\n\nclass MarketList extends React.Component {\n    contextRef = createRef();\n\n    state = {\n        markets: []\n    };\n\n    fetchMarkets = () => {\n    axios.get(\"http://127.0.0.1:8000/api/markets/proposal/false/\").then(res => {\n      this.setState({\n        markets: res.data\n      });\n    });\n};\n\n    componentDidMount() {\n    this.fetchMarkets();\n}\n\n    componentWillReceiveProps(newProps) {\n    if (newProps.token) {\n      this.fetchMarkets();\n    }\n}\n\n    // componentWillReceiveProps(newProps) {\n    //     if (newProps.token) {\n    //\n    //         axios.defaults.headers = {\n    //             \"Content-Type\": \"application/json\",\n    //             Authorization: `Token ${newProps.token}$`\n    //         };\n    //\n    //         axios.get('http://127.0.0.1:8000/api/markets/proposal/false/')\n    //             .then(res => {\n    //                 this.setState({\n    //                     markets: res.data\n    //                 });\n    //             })\n    //     }\n    // }\n\n    render () {\n        return (\n            <div>\n                <br/><br/>\n                <Grid centered columns={2}>\n                    <Ref innerRef={this.contextRef}>\n                        <Grid.Column>\n                            <Sticky context={this.contextRef} offset={100}>\n                                <Rail dividing position='left'>\n\n                                    <Menu vertical>\n                                        <Menu.Item>Categories</Menu.Item>\n                                        <Dropdown text='Messages' pointing='left' className='link item'>\n                                            <Dropdown.Menu>\n                                                <Dropdown.Item>Inbox</Dropdown.Item>\n                                                <Dropdown.Item>Starred</Dropdown.Item>\n                                                <Dropdown.Item>Sent Mail</Dropdown.Item>\n                                                <Dropdown.Item>Drafts (143)</Dropdown.Item>\n                                                <Dropdown.Divider />\n                                                <Dropdown.Item>Spam (1009)</Dropdown.Item>\n                                                <Dropdown.Item>Trash</Dropdown.Item>\n                                            </Dropdown.Menu>\n                                        </Dropdown>\n                                        <Menu.Item>Browse</Menu.Item>\n                                        <Menu.Item>Help</Menu.Item>\n                                    </Menu>\n\n                                </Rail>\n                            </Sticky>\n\n                            <Markets data={this.state.markets}/>\n\n                        </Grid.Column>\n                    </Ref>\n                </Grid>\n            </div>\n        )\n    }\n}\n\n\n// const mapStateToProps = state => {\n//   return {\n//       token: state.token\n//   }\n// };\n//\n// export default connect(mapStateToProps)(MarketList);\n\nexport default MarketList;\n","import React from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\n\nimport { Card } from 'antd';\nimport {Grid, Image, Rail, Segment} from \"semantic-ui-react\";\n\nclass MarketDetail extends React.Component {\n\n    state = {\n        market: {}\n    };\n\n//     componentDidMount() {\n//         axios.defaults.headers = {\n//       \"Content-Type\": \"application/json\",\n//       Authorization: `Token ${this.props.token}`\n// };\n//         console.log(this.props.token);\n//     const marketID = this.props.match.params.marketID;\n//     axios.get(`http://127.0.0.1:8000/api/markets/${marketID}/`).then(res => {\n//       this.setState({\n//         market: res.data\n//       });\n//     });\n// }\n\n\n        componentWillReceiveProps(newProps) {\n            // console.log(\"newProp: \" + newProps.token);\n            // console.log(\"thisProp: \" + this.props.token);\n            if (newProps.token) {\n\n                axios.defaults.headers = {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Token ${newProps.token}`\n                };\n\n                const marketID = this.props.match.params.marketID;\n                axios.get(`http://127.0.0.1:8000/api/markets/${marketID}/`)\n\n                    .then(res => {\n                        this.setState({\n                            market: res.data\n                        });\n                    })\n                    .catch(error => {\n                        console.log(error)\n                    })\n            }\n        }\n\n\n    render () {\n        return (\n            <Grid centered columns={3}>\n                <Grid.Column>\n                    <Segment>\n                        <Image src='/images/wireframe/paragraph.png' />\n\n                        <Rail dividing position='left'>\n                            <Segment>Left Rail Content</Segment>\n                        </Rail>\n\n                        <Card title={this.state.market.name}>\n                            <p>{this.state.market.description}</p>\n                            <p>{this.state.market.end_date}</p>\n                        </Card>\n\n                        <Rail dividing position='right'>\n                            <Segment>Right Rail Content</Segment>\n                        </Rail>\n                    </Segment>\n                </Grid.Column>\n            </Grid>\n            // <Card title={this.state.market.name}>\n            //     <p>{this.state.market.description}</p>\n            //     <p>{this.state.market.end_date}</p>\n            // </Card>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token\n  };\n};\n\nexport default connect(mapStateToProps)(MarketDetail);","let DEBUG = false;\nlet HOST_URL = \"https://aeneas-prediction-market.herokuapp.com\";\nlet SOCKET_URL = \"wss://aeneas-prediction-market.herokuapp.com\";\nif (DEBUG) {\n  HOST_URL = \"http://127.0.0.1:8000\";\n  SOCKET_URL = \"ws://127.0.0.1:8000\";\n}\n\nexport { HOST_URL, SOCKET_URL };","import React, { PropTypes, Component } from 'react';\nimport { Icon, Label } from 'semantic-ui-react'\n\n\nclass Countdown extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      days: 0,\n      hours: 0,\n      min: 0,\n      sec: 0,\n    }\n  }\n\n  componentDidMount() {\n    // update every second\n    this.interval = setInterval(() => {\n      const date = this.calculateCountdown(this.props.date);\n      date ? this.setState(date) : this.stop();\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    this.stop();\n  }\n\n  calculateCountdown(endDate) {\n    let diff = (Date.parse(new Date(endDate)) - Date.parse(new Date())) / 1000;\n\n    // clear countdown when date is reached\n    if (diff <= 0) return false;\n\n    const timeLeft = {\n      years: 0,\n      days: 0,\n      hours: 0,\n      min: 0,\n      sec: 0,\n    };\n\n    // calculate time difference between now and expected date\n    if (diff >= (365.25 * 86400)) { // 365.25 * 24 * 60 * 60\n      timeLeft.years = Math.floor(diff / (365.25 * 86400));\n      diff -= timeLeft.years * 365.25 * 86400;\n    }\n    if (diff >= 86400) { // 24 * 60 * 60\n      timeLeft.days = Math.floor(diff / 86400);\n      diff -= timeLeft.days * 86400;\n    }\n    if (diff >= 3600) { // 60 * 60\n      timeLeft.hours = Math.floor(diff / 3600);\n      diff -= timeLeft.hours * 3600;\n    }\n    if (diff >= 60) {\n      timeLeft.min = Math.floor(diff / 60);\n      diff -= timeLeft.min * 60;\n    }\n    timeLeft.sec = diff;\n\n    return timeLeft;\n  }\n\n  stop() {\n    clearInterval(this.interval);\n  }\n\n  addLeadingZeros(value) {\n    value = String(value);\n    while (value.length < 2) {\n      value = '0' + value;\n    }\n    return value;\n  }\n\n  render() {\n    const countDown = this.state;\n\n    return (\n        // {/*<Label attached={\"bottom right\"}>*/}\n          <span>\n              <Icon name='calendar times outline' />\n              Залишилось:  <br/>\n              {`${this.addLeadingZeros(countDown.days)}`}\n              <sup>{countDown.days <= 4 ? ' Дні' : ' Днів'}</sup>\n              {` ${this.addLeadingZeros(countDown.hours)}`}\n              <sup>{' Год '}</sup>\n              {this.addLeadingZeros(countDown.min)}\n              <sup>{' Хв '}</sup>\n              {this.addLeadingZeros(countDown.sec)}\n              <sup>{' Сек '}</sup>\n          </span>\n          // {/*</Label>*/}\n    );\n  }\n}\n\n// Countdown.propTypes = {\n//   date: PropTypes.string.isRequired\n// };\n\nCountdown.defaultProps = {\n  date: new Date()\n};\n\nexport default Countdown;","import React from 'react';\nimport { Rail, Segment, Header, Progress, Statistic, Icon, Label, Container, Card, Popup, Button, Grid } from 'semantic-ui-react'\nimport Countdown from \"./Countdown\";\nimport { Link } from 'react-router-dom';\n\n\nconst Proposals = (props) => {\n\n  function checkColor(a, b) {\n    if (a < b) {\n      return \"yellow\"\n    } else {\n      return \"red\"\n    }\n  }\n\n  function getCategory(itemCategory) {\n    if (itemCategory === 'SPO') {\n      return ({\n        icon: \"futbol\",\n        color: 'green',\n        title: 'Sports'\n      })\n    } else if (itemCategory === 'POL') {\n      return ({\n        icon: \"handshake\",\n        color: 'blue',\n        title: 'Politics'\n      })\n    } else if (itemCategory === 'FIN') {\n      return ({\n        icon: \"dollar\",\n        color: 'red',\n        title: 'Finances'\n      })\n    } else if (itemCategory === 'OTH') {\n      return ({\n        icon: \"question\",\n        color: 'grey',\n        title: 'Other'\n      })\n    }\n  }\n\n  const colors = [\n    'red',\n    'orange',\n    'yellow',\n    'olive',\n    'green',\n    'teal',\n    'blue',\n    'violet',\n    'purple',\n    'pink',\n    'brown',\n    'grey',\n    'black',\n  ];\n\n\n  return (\n\n    <div>\n\n      <br/><br/>\n      {props.data.map((item, k)=> (\n        <div key={k}>\n          {/*<br/><br/><br/>*/}\n          <br/>\n          <Link to={{pathname: `/markets/${item.id}`}}>\n            <Card link fluid style={{border:'1px solid #17394d', boxShadow: 0}}>\n              <Segment size={\"massive\"} textAlign={'center'} padded basic>\n\n                {/*<Header as={'h3'} color={'grey'}>*/}\n                <Container textAlign={'left'}>\n                  <p style={{color: \"#17394d\", transition: .3, margin: 0, fontFamily: \"veranda\", fontSize: 16, fontWeight: 400, letterSpacing: .1}}>\n                    {item.name}?\n                  </p>\n                </Container>\n                {/*</Header>*/}\n\n                <Rail close={\"very\"} position='right' dividing size={\"massive\"}>\n                  {/*<Segment padded style={{border: '1px solid #17394d', lineHeight: 100}}>*/}\n                  <Card fluid style={{border:'1px solid #17394d', boxShadow: 0}}>\n                    <Segment textAlign={'center'} padded basic>\n                      {/*<Header a={'h2'} color={'grey'}>*/}\n                      <p style={{color: \"#17394d\"}}>\n                        {/*<Statistic>*/}\n                        <Countdown date={item.end_date}/>\n                        {/*</Statistic>*/}\n                      </p>\n                    </Segment>\n                  </Card>\n                  {/*</Header>*/}\n                  {/*</Segment>*/}\n                </Rail>\n\n              </Segment>\n\n\n\n              {/*<Link to={`/proposals/${item.id}`}>*/}\n              {/*<Segment>*/}\n              {/*<Container text textAlign={\"center\"}>*/}\n              {/*<Header as={\"h3\"}>*/}\n              {/*{item.description}*/}\n              {/*</Header>*/}\n              {/*</Container>*/}\n              {/*</Segment>*/}\n              {/*</Link>*/}\n\n\n            </Card>\n          </Link>\n\n          {/*<Popup hideOnScroll position={\"bottom center\"} hoverable flowing basic pinned\n                        trigger={\n                            <Card link fluid>\n                                <Segment.Group stacked piled raised>\n\n                                    <Link to={`/proposals/${item.id}`}>\n                                        <Segment padded stacked size={\"huge\"}>\n\n\n                                            <Label as='a' color={getCategory(item.category)['color']} tag\n                                                   attached={\"top right\"} size={\"small\"}>\n                                                <Icon name={getCategory(item.category)['icon']}/>\n                                                {getCategory(item.category)['title']}\n                                            </Label>\n\n\n                                            {\n                                                <span>\n                                                    <Header as='h2'>\n                                                        {item.name}\n                                                    </Header>\n                                                </span>\n                                            }\n\n                                        </Segment>\n                                    </Link>\n\n                                    <Link to={`/proposals/${item.id}`}>\n                                        <Segment>\n                                            <Container text textAlign={\"center\"}>\n                                                <Header as={\"h3\"}>\n                                                    {item.description}\n                                                </Header>\n                                            </Container>\n                                        </Segment>\n                                    </Link>\n\n                                    <Link to={`/proposals/${item.id}`}>\n                                        <Segment basic raised>\n                                            <Label attached='bottom' ribbon\n                                                   color={checkColor(new Date(Date.now()).getTime(), new Date(item.end_date).getTime())}>\n                                                <Statistic.Group>\n\n                                                    <Statistic>\n                                                        <Statistic.Value>\n                                                            <Label attached={\"bottom\"}>{item.end_date}</Label>\n                                                        </Statistic.Value>\n                                                    </Statistic>\n\n                                                    <Statistic>\n                                                        <Statistic.Value>\n                                                            <Label attached={\"bottom left\"}>Supply: {item.supply} <Icon\n                                                                name={\"bolt\"}/></Label>\n                                                        </Statistic.Value>\n                                                    </Statistic>\n\n                                                    <Statistic>\n                                                        <Statistic.Value>\n                                                            <Countdown date={item.end_date}/>\n                                                        </Statistic.Value>\n                                                    </Statistic>\n\n                                                </Statistic.Group>\n                                            </Label>\n\n                                            <Progress\n                                                percent={new Date(Date.now()).getDate() * 100 / new Date(item.end_date).getDate()}\n                                                attached={\"bottom\"}\n                                                color={checkColor(new Date(Date.now()).getTime(), new Date(item.end_date).getTime())}/>\n\n                                        </Segment>\n                                    </Link>\n\n\n                                    <Rail dividing position='right'>\n                                        <Segment>\n                                            <Popup trigger={<Segment/>} flowing hoverable>\n\n                                                {item.outcomes.map(o => (\n                                                    <Segment key={o.id}>{o.description}</Segment>\n                                                ))}\n\n                                            </Popup>\n\n                                            {item.outcomes.map( o => (\n                                   <Segment key={o.id}>{o.description}</Segment>\n                                ))}\n\n                                        </Segment>\n                                    </Rail>\n\n\n                                </Segment.Group>\n                            </Card>\n                        }>\n\n                        <Grid padded columns={(6 < item.outcomes.length) ? (5 % item.outcomes.length) : item.outcomes.length}>\n                            {item.outcomes.map((o, num) => (\n                                //<Grid.Column>\n                                <Button.Group labeled key={num} basic color={colors[num%13]} vertical attached={\"bottom\"} compact>\n                                    <Button attached fluid>{o.description}</Button>\n                                    <Progress percent={o.probability} attached={\"bottom\"} color={colors[num%13]}/>\n                                </Button.Group>\n                                // <Column>\n                            ))}\n                        </Grid>\n\n                    </Popup>*/}\n        </div>\n\n      ))}\n\n    </div>\n\n  )\n};\n\nexport default Proposals;","import React from \"react\";\nimport { Form as f } from 'semantic-ui-react'\nimport { Input, Icon } from 'semantic-ui-react'\nimport { Form, Button } from \"antd\";\n\n\nconst FormItem = Form.Item;\n\nlet uuid = 2;\nclass DynamicFieldSet extends React.Component {\n  remove = k => {\n    const { form } = this.props;\n    const keys = form.getFieldValue(\"keys\");\n    if (keys.length === 2) {\n      return;\n    }\n\n    form.setFieldsValue({\n      keys: keys.filter(key => key !== k)\n    });\n  };\n\n  add = () => {\n    const { form } = this.props;\n    const keys = form.getFieldValue(\"keys\");\n    const nextKeys = keys.concat(uuid);\n    uuid++;\n    form.setFieldsValue({\n      keys: nextKeys\n    });\n  };\n\n  render() {\n    const { getFieldDecorator, getFieldValue } = this.props.form;\n\n    getFieldDecorator(\"keys\", { initialValue: [0,1] });\n    const keys = getFieldValue(\"keys\");\n    const formItems = keys.map((k) => {\n      return (\n        <f.Field\n          required={false}\n          key={k}\n        >\n          {getFieldDecorator(`names[${k}]`, {\n            validateTrigger: [\"onChange\", \"onBlur\"],\n            rules: [\n              {\n                required: true,\n                whitespace: true,\n                message: \"Please input outcome description or delete this field.\"\n              }\n            ]\n          })(\n            <Input\n              name=\"outcomes\"\n              placeholder=\"outcome description\"\n              style={{ width: \"90%\", marginRight: 8 }}\n            />\n          )}\n          {keys.length > 2 ? (\n            <Icon\n              className=\"dynamic-delete-button\"\n              name={\"minus circle\"}\n              disabled={keys.length === 2}\n              onClick={() => this.remove(k)}\n            />\n          ) : null}\n        </f.Field>\n      );\n    });\n    return (\n      <div>\n        {formItems}\n        <FormItem>\n          <Button type=\"dashed\" onClick={this.add} style={{ width: \"60%\" }}>\n            <Icon name=\"plus\" /> Add outcome\n          </Button>\n        </FormItem>\n      </div>\n    );\n  }\n}\n\nconst WrappedDynamicFieldSet = Form.create()(DynamicFieldSet);\nexport default WrappedDynamicFieldSet;","import React from 'react';\nimport axios from 'axios';\nimport WrappedDynamicFieldSet from \"./DynamicForm\";\nimport { Button, Checkbox, Form, Message, TextArea, Segment, Grid, Select } from 'semantic-ui-react'\nimport {\n  DatesRangeInput\n} from 'semantic-ui-calendar-react';\nimport { HOST_URL } from '../settings';\n\n\nclass CustomForm extends React.Component {\n\n    state = {\n        anon: false,\n        datesRange: '',\n        err: false,\n        success: false,\n        stateValue: null\n    };\n\n    handleSelectChange=(e,{value})=>this.setState({stateValue:value});\n\n    onChange = (event, data) => {\n        this.setState({\n            anon: data.checked\n        });\n    };\n\n    handleChange = (event, {name, value}) => {\n    if (this.state.hasOwnProperty(name)) {\n      this.setState({ [name]: value });\n    }\n  };\n\n    handleFormSubmit = (event, requestType) => {\n        event.preventDefault();\n        const title = event.target.elements.title.value;\n        const description = event.target.elements.description.value;\n        const category = this.state.stateValue;\n        const anon = this.state.anon;\n        const start_date = this.state.datesRange.substring(0,10);\n        const end_date = this.state.datesRange.substring(13,23);\n\n        const out = event.target.elements.outcomes;\n        const outcomes = [];\n        for (const i in out) {\n            if (i === 'value' || out[i].value === undefined) {\n                break\n            }\n            outcomes.push({\"description\": out[i].value});\n        }\n\n        console.log(title, description, anon, outcomes, start_date, end_date, category);\n\n        if (title === '') {\n            this.setState({err: true});\n            return false\n        } else {\n            this.setState({err: false, success: true});\n        }\n\n        // need much more\n\n        switch (requestType) {\n            case 'post':\n                return axios.post(`${HOST_URL}/api/markets/`, {\n                    name: title,\n                    start_date: start_date,\n                    end_date: end_date,\n                    anon: anon,\n                    outcomes: outcomes,\n                    category: category,\n                    description: description\n                })\n                    .then(res => console.log(res))\n                    .catch(error =>\n                        console.error(error));\n        }\n\n    };\n\n    render() {\n        const categoryOptions = [\n            { key: 'FIN', value: 'FIN', text: 'Finances' },\n            { key: 'POL', value: 'POL', text: 'Politics' },\n            { key: 'SPO', value: 'SPO', text: 'Sports' },\n            { key: 'OTH', value: 'OTH', text: 'Other' },\n        ];\n        return (\n/*\n            <Grid columns={3} divided>\n                <Grid.Column/>\n                    <Grid.Column>*/\n\n                        <Segment>\n                          <Form error={this.state.err} success={this.state.success} onSubmit={(event) => this.handleFormSubmit(\n                            event,\n                            this.props.requestType)}>\n\n                            <Form.Field>\n                              <label>Title</label>\n                              <input name=\"title\" placeholder='Put a title here' />\n                            </Form.Field>\n\n                            <Form.Field>\n                                <label>Date</label>\n                                <DatesRangeInput\n                                  dateFormat={\"YYYY-MM-DD\"}\n                                  name=\"datesRange\"\n                                  placeholder=\"From - To\"\n                                  value={this.state.datesRange}\n                                  iconPosition=\"left\"\n                                  onChange={this.handleChange}\n                                />\n                            </Form.Field>\n\n                            <Form.Field>\n                              <label>Description / Resolution source</label>\n                              <TextArea name=\"description\" placeholder='Enter some content' style={{ minHeight: 100 }} />\n                            </Form.Field>\n\n                              <Form.Field>\n                                  <label>Outcomes</label>\n                                  <WrappedDynamicFieldSet />\n                              </Form.Field>\n\n                            <Form.Field>\n                              <Checkbox toggle onChange={this.onChange} label=\"Anon\" />\n                            </Form.Field>\n\n                            <Form.Field>\n                                <Select placeholder='Select category' options={categoryOptions} onChange={this.handleSelectChange}/>\n                            </Form.Field>\n\n                            <Button type=\"primary\" htmltype=\"submit\">{this.props.btnText}</Button>\n\n                            <Message\n                                error\n                                header='All fields required!'\n                                content='You should fill in all required fields.'\n                            />\n\n                            <Message\n                                success\n                                header='Your proposal were created successful'\n                                content='You can now see it in proposal list'\n                            />\n\n                          </Form>\n                        </Segment>\n\n                    /*</Grid.Column>\n                <Grid.Column/>\n            </Grid>*/\n\n        );\n    }\n}\n\nexport default CustomForm;\n\n","import { SOCKET_URL } from \"./settings\";\n\nclass WebSocketService {\n  static instance = null;\n  callbacks = {};\n\n  static getInstance() {\n    if (!WebSocketService.instance) {\n      WebSocketService.instance = new WebSocketService();\n    }\n    return WebSocketService.instance;\n  }\n\n  constructor() {\n    this.socketRef = null;\n  }\n\n  connect(channel) {\n    console.log(\"ID: \", channel);\n    const path = `${SOCKET_URL}/ws/anon/${channel}/`;\n    this.socketRef = new WebSocket(path);\n    this.socketRef.onopen = () => {\n      console.log('WebSocket open');\n      this.sendMessage({\n        // message: \"Client send this message\",\n        channel: channel\n      })\n    };\n    // this.socketNewMessage(JSON.stringify({\n    //   command: 'fetch_messages'\n    // }));\n    this.socketRef.onmessage = e => {\n      this.socketNewMessage(e.data);\n      console.log('Client receive: ', e.data);\n    };\n    this.socketRef.onerror = e => {\n      console.log(e.message);\n    };\n    this.socketRef.onclose = (event) => {\n      if (!event.wasClean) {\n        this.connect(channel);\n      }\n      // if (event.wasClean) {\n      //   console.log(`[close] Connection closed cleanly, code=${event.code}`);\n      // } else {\n      //   console.log(\"WebSocket closed let's reopen\");\n      //   this.connect(channel);\n      // }\n    };\n  }\n\n  socketNewMessage(data) {\n    const parsedData = JSON.parse(data);\n    const command = parsedData.command;\n    console.log('COMMAND: ', command);\n    if (Object.keys(this.callbacks).length === 0) {\n      return;\n    }\n    if (command === 'market') {\n      this.callbacks[command](parsedData.market_data, parsedData.market_orders)\n    }\n    if (command === 'messages') {\n      this.callbacks[command](parsedData.messages);\n    }\n    if (command === 'new_message') {\n      this.callbacks[command](parsedData.message);\n    }\n  }\n\n  fetchMessages(username) {\n    this.sendMessage({ command: 'fetch_messages', username: username });\n  }\n\n  newChatMessage(message) {\n    this.sendMessage({ command: 'new_message', from: message.from, message: message.content });\n  }\n\n  fetchToken(token) {\n    console.log('FETCH TOKEN: ', token);\n    this.sendMessage({ token: token })\n  }\n\n  newChannel(channel) {\n    this.sendMessage({ channel: channel })\n  }\n\n  // newOutcome(channel, outcome) {\n  //   this.sendMessage({ channel: channel, outcome: outcome })\n  // }\n\n  addCallbacks(authCallback) {\n    this.callbacks['market'] = authCallback;\n  }\n\n  sendMessage(data) {\n    try {\n      this.socketRef.send(JSON.stringify({ ...data }));\n    }\n    catch(err) {\n      console.log(err.message);\n    }\n  }\n\n  state() {\n    return this.socketRef.readyState;\n  }\n\n}\n\nconst WebSocketInstance = WebSocketService.getInstance();\n\nexport default WebSocketInstance;\n","import { SOCKET_URL } from \"./settings\";\n\nclass WebSocketService {\n  static instance = null;\n  callbacks = {};\n\n  static getInstance() {\n    if (!WebSocketService.instance) {\n      WebSocketService.instance = new WebSocketService();\n    }\n    return WebSocketService.instance;\n  }\n\n  constructor() {\n    this.socketRef = null;\n  }\n\n  connect(userID, token) {\n    console.log(\"ID: \", userID);\n    const path = `${SOCKET_URL}/ws/auth/${userID}/`;\n    this.socketRef = new WebSocket(path);\n    this.socketRef.onopen = () => {\n      console.log('WebSocket open');\n      this.sendMessage({\n        // message: \"Client send this message\",\n        token: token\n      })\n    };\n    // this.socketNewMessage(JSON.stringify({\n    //   command: 'fetch_messages'\n    // }));\n    this.socketRef.onmessage = e => {\n      this.socketNewMessage(e.data);\n      console.log('Client receive: ', e.data);\n    };\n    this.socketRef.onerror = e => {\n      console.log(e.message);\n    };\n    this.socketRef.onclose = (event) => {\n      if (!event.wasClean) {\n        this.connect(userID, token);\n      }\n      // if (event.wasClean) {\n      //   console.log(`[close] Connection closed cleanly, code=${event.code}`);\n      // } else {\n      //   console.log(\"WebSocket closed let's reopen\");\n      //   this.connect(userID, token);\n      // }\n    };\n  }\n\n  socketNewMessage(data) {\n    const parsedData = JSON.parse(data);\n    const command = parsedData.command;\n    console.log('COMMAND: ', command);\n    if (Object.keys(this.callbacks).length === 0) {\n      return;\n    }\n    if (command === 'auth') {\n      this.callbacks[command](parsedData.username, parsedData.cash, parsedData.wallet)\n    }\n  }\n\n  fetchMessages(username) {\n    this.sendMessage({ command: 'fetch_messages', username: username });\n  }\n\n  fetchToken(token) {\n    console.log('FETCH TOKEN: ', token);\n    this.sendMessage({ token: token })\n  }\n\n  addCallbacks(authCallback) {\n    this.callbacks['auth'] = authCallback;\n  }\n\n  sendMessage(data) {\n    try {\n      this.socketRef.send(JSON.stringify({ ...data }));\n    }\n    catch(err) {\n      console.log(err.message);\n    }\n  }\n\n  state() {\n    return this.socketRef.readyState;\n  }\n\n}\n\nconst WebSocketInstance = WebSocketService.getInstance();\n\nexport default WebSocketInstance;\n","import React, { createRef } from 'react';\nimport axios from 'axios';\nimport { HOST_URL } from '../settings';\n\nimport Proposals from '../components/Proposal';\nimport { Link } from 'react-router-dom';\nimport {Grid, Rail, Sticky, Menu, Dropdown, Ref, Button, Modal, Segment } from \"semantic-ui-react\";\nimport CustomForm from '../components/Form';\nimport PublicWebSocketInstance from \"../websocket_anon\";\nimport WebSocketInstance from \"../websocket\";\n\nclass ProposalList extends React.Component {\n\n  contextRef = createRef();\n\n  state = {\n    proposals: []\n  };\n\n  // constructor(props) {\n  //   super(props);\n  //   PublicWebSocketInstance.addCallbacks(this.setMessages.bind(this));\n  // }\n\n  // setMessages(markets) {\n  //   this.setState({\n  //     proposals: markets\n  //   });\n  // }\n\n  componentDidMount() {\n    axios.get(`${HOST_URL}/api/markets/?proposal=true`)\n        .then(res => {\n            this.setState({\n                proposals: res.data.results\n            });\n            console.log('PROPOSAL: ', res.data.results)\n        });\n\n    // PublicWebSocketInstance.connect('markets')\n  }\n\n  componentWillUnmount() {\n    if (PublicWebSocketInstance.socketRef) {\n      PublicWebSocketInstance.socketRef.close(1000, \"Closing Connection Normally\");\n    }\n  }\n\n  render () {\n    return (\n      <div>\n        <br/><br/>\n        <Grid centered columns={2}>\n          <Ref innerRef={this.contextRef}>\n            <Grid.Column>\n              <Sticky context={this.contextRef} offset={100}>\n                <Rail dividing position='left'>\n\n                  {/*<Menu vertical>\n                                        <Menu.Item>Categories</Menu.Item>\n                                        <Dropdown text='Messages' pointing='left' className='link item'>\n                                            <Dropdown.Menu>\n                                                <Dropdown.Item>Inbox</Dropdown.Item>\n                                                <Dropdown.Item>Starred</Dropdown.Item>\n                                                <Dropdown.Item>Sent Mail</Dropdown.Item>\n                                                <Dropdown.Item>Drafts (143)</Dropdown.Item>\n                                                <Dropdown.Divider />\n                                                <Dropdown.Item>Spam (1009)</Dropdown.Item>\n                                                <Dropdown.Item>Trash</Dropdown.Item>\n                                            </Dropdown.Menu>\n                                        </Dropdown>\n                                        <Menu.Item>Browse</Menu.Item>\n                                        <Menu.Item>Help</Menu.Item>\n                                    </Menu>*/}\n\n                </Rail>\n              </Sticky>\n\n              <br/>\n\n              {/*<Modal size={\"small\"} trigger={<Button>Test</Button>}>\n                                    <CustomForm\n                                        requestType=\"post\"\n                                        btnText=\"Create\"/>\n                            </Modal>*/}\n\n              {/*<Link to=\"/proposal/create/\">\n                                <Button>\n                                    Create a proposal\n                                </Button>\n                            </Link>*/}\n\n              <Proposals data={this.state.proposals}/>\n\n            </Grid.Column>\n          </Ref>\n        </Grid>\n      </div>\n    )\n  }\n}\n\nexport default ProposalList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { format } from \"d3-format\";\nimport { timeFormat } from \"d3-time-format\";\n\n\nimport { ChartCanvas, Chart } from \"react-stockcharts\";\nimport {\n\tBarSeries,\n\tCandlestickSeries,\n} from \"react-stockcharts/lib/series\";\nimport { XAxis, YAxis } from \"react-stockcharts/lib/axes\";\nimport {\n\tCrossHairCursor,\n\tEdgeIndicator,\n\tCurrentCoordinate,\n\tMouseCoordinateX,\n\tMouseCoordinateY,\n} from \"react-stockcharts/lib/coordinates\";\n\nimport { discontinuousTimeScaleProvider } from \"react-stockcharts/lib/scale\";\nimport { OHLCTooltip } from \"react-stockcharts/lib/tooltip\";\nimport { fitWidth } from \"react-stockcharts/lib/helper\";\nimport { last } from \"react-stockcharts/lib/utils\";\n\nclass CandleStickChartForDiscontinuousIntraDay extends React.Component {\n\trender() {\n\t\tconst { type, data: initialData, width, ratio } = this.props;\n\n\t\tconst xScaleProvider = discontinuousTimeScaleProvider\n\t\t\t.inputDateAccessor(d => d.date);\n\t\tconst {\n\t\t\tdata,\n\t\t\txScale,\n\t\t\txAccessor,\n\t\t\tdisplayXAccessor,\n\t\t} = xScaleProvider(initialData);\n\n\t\tconst start = xAccessor(last(data));\n\t\tconst end = xAccessor(data[Math.max(0, data.length - 150)]);\n\t\tconst xExtents = [start, end];\n\n\t\treturn (\n\t\t\t<ChartCanvas height={568} // default: 400\n\t\t\t\tratio={ratio}\n\t\t\t\twidth={width}\n\t\t\t\tmargin={{ left: 80, right: 80, top: 10, bottom: 30 }}\n\t\t\t\ttype={type}\n\t\t\t\tseriesName=\"MSFT\"\n\t\t\t\tdata={data}\n\t\t\t\txScale={xScale}\n\t\t\t\txAccessor={xAccessor}\n\t\t\t\tdisplayXAccessor={displayXAccessor}\n\t\t\t\txExtents={xExtents}\n\t\t\t>\n\t\t\t\t<Chart id={2}\n\t\t\t\t\tyExtents={[d => d.volume]}\n\t\t\t\t\theight={100} origin={(w, h) => [0, h - 100]}\n\t\t\t\t>\n\t\t\t\t\t<YAxis axisAt=\"left\" orient=\"left\" ticks={5} tickFormat={format(\".2s\")}/>\n\n\t\t\t\t\t<MouseCoordinateY\n\t\t\t\t\t\tat=\"left\"\n\t\t\t\t\t\torient=\"left\"\n\t\t\t\t\t\tdisplayFormat={format(\".4s\")} />\n\n\t\t\t\t\t{/*<BarSeries yAccessor={d => d.volume} fill={d => d.close > d.open ? \"#6BA583\" : \"#FF0000\"} />*/}\n\t\t\t\t\t<BarSeries yAccessor={d => d.volume} fill={d => d.close > d.open ? \"#FF0000\" : \"#6BA583\"} />\n\n\t\t\t\t\t<CurrentCoordinate yAccessor={d => d.volume} fill=\"#9B0A47\" />\n\n\t\t\t\t\t<EdgeIndicator itemType=\"last\" orient=\"right\" edgeAt=\"right\"\n\t\t\t\t\t\tyAccessor={d => d.volume} displayFormat={format(\".4s\")} fill=\"#0F0F0F\"/>\n\t\t\t\t</Chart>\n\t\t\t\t<Chart id={1}\n\t\t\t\t\tyExtents={[d => [d.high, d.low]]}\n\t\t\t\t\tpadding={{ top: 40, bottom: 20 }}\n\t\t\t\t>\n\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\"/>\n\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" ticks={5} />\n\n\t\t\t\t\t<MouseCoordinateX\n\t\t\t\t\t\trectWidth={60}\n\t\t\t\t\t\tat=\"bottom\"\n\t\t\t\t\t\torient=\"bottom\"\n\t\t\t\t\t\tdisplayFormat={timeFormat(\"%H:%M:%S\")} />\n\t\t\t\t\t<MouseCoordinateY\n\t\t\t\t\t\tat=\"right\"\n\t\t\t\t\t\torient=\"right\"\n\t\t\t\t\t\tdisplayFormat={format(\".2f\")} />\n\n\t\t\t\t\t{/*<CandlestickSeries />*/}\n\t\t\t\t\t<CandlestickSeries fill={d => d.close > d.open ? \"#FF0000\" : \"#6BA583\"}/>\n\t\t\t\t\t<EdgeIndicator itemType=\"last\" orient=\"right\" edgeAt=\"right\"\n\t\t\t\t\t\t// yAccessor={d => d.close} fill={d => d.close > d.open ? \"#6BA583\" : \"#FF0000\"}/>\n\t\t\t\t\t\tyAccessor={d => d.close} fill={d => d.close > d.open ? \"#FF0000\" : \"#6BA583\"}/>\n\n\t\t\t\t\t<OHLCTooltip origin={[-40, 0]} xDisplayFormat={timeFormat(\"%H:%M:%S\")}/>\n\t\t\t\t</Chart>\n\t\t\t\t<CrossHairCursor />\n\t\t\t</ChartCanvas>\n\t\t);\n\t}\n}\n\nCandleStickChartForDiscontinuousIntraDay.propTypes = {\n\tdata: PropTypes.array.isRequired,\n\twidth: PropTypes.number.isRequired,\n\tratio: PropTypes.number.isRequired,\n\ttype: PropTypes.oneOf([\"svg\", \"hybrid\"]).isRequired,\n};\n\nCandleStickChartForDiscontinuousIntraDay.defaultProps = {\n\ttype: \"svg\",\n};\nCandleStickChartForDiscontinuousIntraDay = fitWidth(CandleStickChartForDiscontinuousIntraDay);\n\nexport default CandleStickChartForDiscontinuousIntraDay;","import React from 'react';\nimport { render } from 'react-dom';\nimport Chart from './Chart';\nimport { getData } from \"./utils\"\n\nimport { TypeChooser } from \"react-stockcharts/lib/helper\";\nimport axios from \"axios\";\nimport connect from \"react-redux/es/connect/connect\";\n// import equal from 'fast-deep-equal'\nimport { HOST_URL } from '../../settings';\n\n\nvar d = [{},{}];\n\nvar temp = {\n        \"date\": null,\n        \"open\": null,\n        \"high\": null,\n        \"low\": null,\n        \"close\": null,\n        \"volume\": null\n    };\n\nfunction bar(dir) {\n    var unit_price = (dir.price/dir.amount);\n\n    temp.close = unit_price;\n\n    if (temp.volume === null) {temp.volume = dir.amount} else {temp.volume += dir.amount}\n\n    if (temp.open === null) {temp.open = unit_price}\n\n    if (temp.high === null || temp.high < unit_price) {temp.high = unit_price}\n\n    if (temp.low === null || temp.low > unit_price) {temp.low = unit_price}\n\n}\n\nfunction f(dict, minutes) {\n    var i = 0;\n    var start = (new Date(dict[0].created).getTime());\n    var end = (new Date(dict[dict.length-1].created).getTime());\n    var num_intervals = (parseInt(((start-end)/(1000*60)/10) +1));\n\n    for (; i<num_intervals; i++) {\n        temp.date = end + minutes*(i+1)*60000;\n        dict.filter(x => (new Date(x['created']).getTime() <= end + minutes*(i+1)*60000\n            && new Date(x['created']).getTime() >= end + minutes*(i)*60000))\n            .forEach(e => bar(e));\n\n        if (temp.volume !== null) {\n            d.push(temp,);\n\n            temp = {\n            \"date\": null,\n            \"open\": null,\n            \"high\": null,\n            \"low\": null,\n            \"close\": null,\n            \"volume\": null\n            };\n        }\n    }\n}\n\nclass ChartComponent extends React.Component {\n\n    state = {};\n\n    test() {\n        {\n            axios.get(`${HOST_URL}/api/orders/`, {headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Token ${this.props.token}`\n                }})\n                .then(res => {\n                    this.setState({\n                        orders: res.data.results.filter(x => x['outcome'] === parseInt(this.props.outcome))\n                    });\n\n                    if (this.state.orders.length === 0) {\n                        this.setState({\n                            orders: d\n                        })\n                    }\n                    f(this.state.orders, 10);\n\n                    let data = d.map((obj) => {\n                        let date = obj.date;\n                        obj.date = new Date(date);\n                        return obj\n                    });\n\n                    this.setState({ data });\n                });\n        }\n    }\n\n\tcomponentWillReceiveProps(nextProps) {\n\t    // let data = d.map((obj) => {\n        //                 let date = obj.date;\n        //                 obj.date = new Date(date);\n        //                 return obj\n        //             });\n        //             this.setState({ data });\n\t    d = [{},{}];\n\n        if(this.props !== nextProps) {\n\n            if (nextProps.token) {\n                this.test();\n                // this.state.timer = setInterval(() => this.test(), 500);\n\n                // clearInterval(this.state.timer);\n\n                // let timer = setInterval(() => this.test(), 500);\n                // this.setState({ timer: timer })\n            }\n\n            // axios.get('http://127.0.0.1:8000/api/orders/', {headers: {\n            //         \"Content-Type\": \"application/json\",\n            //         Authorization: `Token ${this.props.token}`\n            //     }})\n            //     .then(res => {\n            //         this.setState({\n            //             orders: res.data.results.filter(x => x['outcome'] === parseInt(this.props.outcome))\n            //         });\n            //\n            //         f(this.state.orders, 10);\n            //\n            //         let data = d.map((obj) => {\n            //             let date = obj.date;\n            //             obj.date = new Date(date);\n            //             return obj\n            //         });\n            //\n            //         this.setState({ data });\n            //     });\n        }\n\t}\n\n\tcomponentWillUnmount() {\n      // clearInterval(this.state.timer);\n    }\n\n\tcomponentDidUpdate(prevProps) {\n\t    d = [{},{}];\n\t    if (this.props.outcome !== prevProps.outcome && prevProps.outcome!==undefined)\n\t    {\n\t        if (this.props.token || prevProps.token) {\n                this.test();\n                // this.timer = setInterval(() => this.test(), 500);\n                // clearInterval(this.state.timer);\n\n                // let timer = setInterval(() => this.test(), 500);\n                // this.setState({ timer: timer })\n            }\n\t        // axios.get('http://127.0.0.1:8000/api/orders/', {headers: {\n            //         \"Content-Type\": \"application/json\",\n            //         Authorization: `Token ${this.props.token}`\n            //     }})\n            //     .then(res => {\n            //         this.setState({\n            //             orders: res.data.results.filter(x => x['outcome'] === parseInt(this.props.outcome))\n            //         });\n            //\n            //         f(this.state.orders, 10);\n            //\n            //         let data = d.map((obj) => {\n            //             let date = obj.date;\n            //             obj.date = new Date(date);\n            //             return obj\n            //         });\n            //         this.setState({ data });\n            //\n            //     })\n\t    }\n\t}\n\n\trender() {\n\t\tif (this.state.data == null) {\n\t\t\treturn <div>Loading...</div>\n\t\t}\n\n\t\treturn (\n\t\t    <div>\n\t\t        <Chart type={\"hybrid\"} data={this.state.data} />\n            </div>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token\n  };\n};\n\n// export default ChartComponent;\nexport default connect(mapStateToProps)(ChartComponent);\n","import React from 'react';\nimport axios from \"axios\";\nimport { Table } from 'semantic-ui-react'\nimport connect from \"react-redux/es/connect/connect\";\n// import PublicWebSocketInstance from \".../websocket_anon\";\nimport { HOST_URL } from '../../settings';\n\n\nfunction decimalAdjust(type, value, exp) {\n  // Если степень не определена, либо равна нулю...\n  if (typeof exp === 'undefined' || +exp === 0) {\n    return Math[type](value);\n  }\n  value = +value;\n  exp = +exp;\n  // Если значение не является числом, либо степень не является целым числом...\n  if (isNaN(value) || !(typeof exp === 'number' && exp % 1 === 0)) {\n    return NaN;\n  }\n  // Сдвиг разрядов\n  value = value.toString().split('e');\n  value = Math[type](+(value[0] + 'e' + (value[1] ? (+value[1] - exp) : -exp)));\n  // Обратный сдвиг\n  value = value.toString().split('e');\n  return +(value[0] + 'e' + (value[1] ? (+value[1] + exp) : exp));\n}\n\nfunction round(value, exp) {\n  return decimalAdjust('round', value, exp);\n}\n\n/**\n * @return {string}\n */\nfunction NumScroll(num) {\n  if (num > 3) {\n    return 'scroll'\n  } else {return 'null'}\n}\n\nvar d = [{},{}];\n\nfunction convert(type) {\n  if (type === false) {\n    return 'Купівля'\n  } else {\n    return 'Продаж'\n  }\n}\n\nclass OrderHistory extends React.Component {\n\n  // constructor(props) {\n  //   super(props);\n  //   PublicWebSocketInstance.addCallbacks(this.setMessages.bind(this));\n  // }\n  //\n  // setMessages(data) {\n  //   this.setState({\n  //     orders: data\n  //   });\n  // }\n\n  state = {};\n\n  test() {\n    {\n      axios.get(`${HOST_URL}/api/orders/`, {headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${this.props.token}`\n        }})\n        .then(res => {\n          this.setState({\n            orders: res.data.results.filter(x => x['outcome'] === parseInt(this.props.outcome))\n          });\n        });\n    }\n  }\n\n  // componentDidMount() {\n  //   this.setState({\n  //     orders: this.props.orders.filter(x => x['outcome'] === parseInt(this.props.outcome))\n  //   });\n  // }\n\n  componentWillReceiveProps(nextProps) {\n    d = [{},{}];\n\n    // axios.defaults.headers = {\n    //     \"Content-Type\": \"application/json\",\n    //     Authorization: `Token ${this.props.token}`\n    // };\n    if(this.props !== nextProps){\n\n      if (this.props.token) {\n        // this.test();\n\n        // clearInterval(this.state.timer);\n\n        // let timer = setInterval(() => this.test(), 500);\n        // this.setState({ timer: timer })\n      }\n\n      // axios.get('http://127.0.0.1:8000/api/orders/', {headers: {\n      //         \"Content-Type\": \"application/json\",\n      //         Authorization: `Token ${this.props.token}`\n      //     }})\n      //     .then(res => {\n      //         this.setState({\n      //             orders: res.data.results.filter(x => x['outcome'] === parseInt(this.props.outcome))\n      //         });\n      //     });\n    }\n  }\n\n  /*componentDidUpdate(prevProps) {\n      d = [{},{}];\n      if (this.props.outcome !== prevProps.outcome && prevProps.outcome!==undefined)\n      {\n          axios.get('http://127.0.0.1:8000/api/orders/', {headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Token ${this.props.token}`\n                }})\n                .then(res => {\n                    this.setState({\n                        orders: res.data.results.filter(x => x['outcome'] === parseInt(this.props.outcome))\n                    });\n                });\n      }\n  }*/\n\n  componentWillUnmount() {\n    // clearInterval(this.state.timer);\n  }\n\n  render() {\n    // if (this.props.orders == null || this.props.token == null) {\n    //   return <div>Loading...</div>\n    // }\n    let filtered = this.props.orders.filter(x => x['outcome'] === parseInt(this.props.outcome));\n\n    return (\n      <div>\n                <pre style={{height: 180, overflowY: NumScroll(filtered.length)}}>\n                <Table striped textAlign={'center'}>\n                    <Table.Header>\n                      <Table.Row>\n                        <Table.HeaderCell>Час</Table.HeaderCell>\n                        <Table.HeaderCell>Тип</Table.HeaderCell>\n                        <Table.HeaderCell>Кількість</Table.HeaderCell>\n                        <Table.HeaderCell>Вартість</Table.HeaderCell>\n                      </Table.Row>\n                    </Table.Header>\n\n                  {filtered.map((ord, num) => (\n                    <Table.Body key={num}>\n                      <Table.Row>\n                        <Table.Cell>{new Date(ord.created).getHours()}:{new Date(ord.created).getMinutes()}</Table.Cell>\n                        <Table.Cell>{convert(ord.order_type)}</Table.Cell>\n                        <Table.Cell>{ord.amount}</Table.Cell>\n                        <Table.Cell>{round(ord.price, -2) + '$'}</Table.Cell>\n                      </Table.Row>\n                    </Table.Body>\n                  ))}\n\n                </Table>\n                </pre>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token\n  };\n};\n\n// export default OrderHistory;\nexport default connect(mapStateToProps)(OrderHistory);\n\n","import React from 'react';\nimport axios from 'axios';\n\nimport { Button, Form, Segment, Grid } from 'semantic-ui-react'\nimport connect from \"react-redux/es/connect/connect\";\nimport { HOST_URL } from '../settings';\n\n\nclass OrderForm extends React.Component {\n\n  handleFormSubmit = (event, requestType, orderType) => {\n    event.preventDefault();\n    const amount = event.target.elements.quantity.value;\n\n    switch (requestType) {\n      case 'post':\n        // axios.defaults.headers = {\n        //     \"Content-Type\": \"application/json\",\n        //     Authorization: `Token ${this.props.token}`\n        // };\n        return axios.post(`${HOST_URL}/api/orders/`, {\n          order_type: orderType,\n          amount: amount,\n          outcome: this.props.outcome,\n          user: this.props.userID //this.state.auth.id\n        }, {headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Token ${this.props.token}`\n          }})\n          .then(res => console.log(res))\n          .catch(error =>\n            console.error(error.response));\n    }\n\n  };\n\n  render() {\n    return (\n      <Grid columns={2} divided>\n        <Grid.Column>\n\n          <Segment>\n            <Form onSubmit={(event) => this.handleFormSubmit(\n              event,\n              this.props.requestType,\n              false)}>\n\n              <Form.Field>\n                <label>Купити \"{this.props.descr}\"</label>\n                <input name=\"quantity\" placeholder='Put a quantity here' />\n              </Form.Field>\n\n              <Button type=\"primary\" htmltype=\"submit\">{'Купити'}</Button>\n\n            </Form>\n          </Segment>\n\n        </Grid.Column>\n\n        <Grid.Column>\n\n          <Segment>\n            <Form onSubmit={(event) => this.handleFormSubmit(\n              event,\n              this.props.requestType,\n              true)}>\n\n              <Form.Field>\n                <label>Продати \"{this.props.descr}\"</label>\n                <input name=\"quantity\" placeholder='Put a quantity here' />\n              </Form.Field>\n\n              <Button type=\"primary\" htmltype=\"submit\">{'Продати'}</Button>\n\n            </Form>\n          </Segment>\n\n        </Grid.Column>\n      </Grid>\n\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token,\n    userID: state.auth.userID\n  };\n};\n\nexport default connect(mapStateToProps)(OrderForm);\n\n","import React from 'react';\nimport {Button, Container, Label, Progress, Segment} from \"semantic-ui-react\";\n// import WebSocketInstance from \"../websocket\";\n\n/**\n * @return {string}\n */\nfunction NumScroll(num) {\n    if (num > 7) {\n        return 'scroll'\n    } else {return 'null'}\n}\n\nclass OutcomeList extends React.Component{\n\n    constructor(props) {\n      super(props);\n      this.state = {};\n      // WebSocketInstance.addCallbacks(this.setMessages.bind(this));\n  }\n\n  // setMessages(username, cash, wallet) {\n  //   this.setState({ wallet: wallet});\n  // }\n\n    colors = [\n      'red',\n      'orange',\n      'yellow',\n      'olive',\n      'green',\n      'teal',\n      'blue',\n      'violet',\n      'purple',\n      'pink',\n      'brown',\n      'grey',\n      'black',\n    ];\n\n    // default height: 316\n    render() {\n        return (\n            <div>\n                <Segment>\n                    <pre style={{height: 540, overflowY: NumScroll(this.props.data.length)}}>\n\n\n                        {this.props.data.map((o, num) => (\n                            <Segment basic key={num}>\n                                <Button.Group toggle fluid labeled basic color={this.colors[num % 13]} vertical style={{border:`1px solid ${this.colors[num % 13]}`}}>\n\n                                    <Button active onClick={() => this.props.handler(`${o.id}`, `${o.description}`)}>\n                                        <Container>\n                                            {o.description}\n                                        </Container>\n                                        <Label size={'tiny'} attached={\"top left\"} as='a' color={this.colors[num % 13]}>\n                                            Ціна: {parseFloat(o.probability).toFixed(2) + '$'}\n                                        </Label>\n                                      {this.props.wallet ?\n                                        (<Label tag size={'tiny'} attached={\"top right\"} as='a'\n                                               color={this.colors[num % 13]}>\n                                          {/*Balance: {o.amount}*/}\n                                          Баланс: {(this.props.wallet[o.id]) ? this.props.wallet[o.id] : 0}\n                                        </Label>) :\n                                        (null)\n                                      }\n                                    </Button>\n\n                                    <Progress percent={o.probability * 100} attached={\"bottom\"} color={this.colors[num % 13]}/>\n                                </Button.Group>\n                            </Segment>\n                        ))}\n\n\n                    </pre>\n                </Segment>\n            </div>\n        )\n    }\n}\n\nexport default OutcomeList;","import axios from 'axios';\nimport * as actionTypes from './actionTypes';\nimport WebSocketInstance from \"../../websocket\";\nimport { HOST_URL } from '../../settings';\n\n\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  }\n};\n\nexport const authUpdate = (username, cash, wallet) => {\n  return {\n    type: actionTypes.AUTH_UPDATE,\n    username: username,\n    cash: cash,\n    wallet: wallet,\n  };\n};\n\nexport const authSuccess = (token, username, cash, userID) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: token,\n    username: username,\n    cash: cash,\n    userID: userID,\n  }\n};\n\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  }\n};\n\nexport const logout = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('expirationDate');\n  localStorage.removeItem('username');\n  localStorage.removeItem('userID');\n  localStorage.removeItem('cash');\n  if (WebSocketInstance.socketRef) {\n    WebSocketInstance.socketRef.close(1000, \"Closing Connection Normally\");\n  }\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\n\nexport const checkAuthTimeout = expirationTime => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationTime * 1000)\n  }\n};\n\nexport const authLogin = (username, password) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\";\n    axios.defaults.xsrfCookieName = \"csrftoken\";\n    axios.post(`${HOST_URL}/api/auth/login/`, {\n      username: username,\n      password: password\n    })\n      .then(res => {\n        const token = res.data.key;\n\n        axios.get(`${HOST_URL}/api/auth/user/`, {headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Token ${token}`\n          }})\n          .then(res => {\n\n            const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n            localStorage.setItem('token', token);\n            localStorage.setItem('username', res.data.username);\n            localStorage.setItem('cash', res.data.cash);\n            localStorage.setItem('userID', res.data.id);\n            localStorage.setItem('expirationDate', expirationDate);\n\n\n            const username = res.data.username;\n            const cash = res.data.cash;\n            const userID = res.data.id;\n            WebSocketInstance.connect(res.data.id, token); // userdID, token\n\n            dispatch(authSuccess(token, username, cash, userID));\n            dispatch(checkAuthTimeout(3600));\n          });\n      })\n      .catch(err => {\n        dispatch(authFail(err))\n      })\n  }\n};\n\nexport const authSignup = (username, email, password1, password2) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\";\n    axios.defaults.xsrfCookieName = \"csrftoken\";\n    axios.post(`${HOST_URL}/api/auth/registration/`, {\n      username: username,\n      email: email,\n      password1: password1,\n      password2: password2\n    })\n      .then(res => {\n        const token = res.data.key;\n\n        axios.get(`${HOST_URL}/api/auth/user/`, {headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Token ${token}`\n          }})\n          .then(res => {\n\n            const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n            localStorage.setItem('token', token);\n            localStorage.setItem('username', res.data.username);\n            localStorage.setItem('cash', res.data.cash);\n            localStorage.setItem('userID', res.data.id);\n            localStorage.setItem('expirationDate', expirationDate);\n\n\n            const username = res.data.username;\n            const cash = res.data.cash;\n            const userID = res.data.id;\n            WebSocketInstance.connect(res.data.id, token);\n\n            dispatch(authSuccess(token, username, cash, userID));\n            dispatch(checkAuthTimeout(3600));\n          });\n      })\n      .catch(err => {\n        dispatch(authFail(err))\n      })\n  }\n};\n\nexport const authCheckState = () => {\n  return dispatch => {\n    const token = localStorage.getItem('token');\n    const username = localStorage.getItem('username');\n    const cash = localStorage.getItem('cash');\n    const userID = localStorage.getItem('userID');\n\n    if (token === undefined) {\n      dispatch(logout());\n    } else {\n      const expirationDate = new Date(localStorage.getItem('expirationDate'));\n      if ( expirationDate <= new Date() ) {\n        dispatch(logout());\n      } else {\n        dispatch(authSuccess(token, username, cash, userID));\n        dispatch(\n          checkAuthTimeout(\n            (expirationDate.getTime() - new Date().getTime()) / 1000\n          ));\n        WebSocketInstance.connect(userID, token);\n      }\n    }\n  }\n};","export const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\n\nexport const AUTH_UPDATE = \"AUTH_UPDATE\";\n\nexport const OPEN_ADD_CHAT_POPUP = \"OPEN_ADD_CHAT_POPUP\";\nexport const CLOSE_ADD_CHAT_POPUP = \"CLOSE_ADD_CHAT_POPUP\";\nexport const ADD_MESSAGE = \"ADD_MESSAGE\";\nexport const SET_MESSAGES = \"SET_MESSAGES\";\nexport const GET_CHATS_SUCCESS = \"GET_CHATS_SUCCESS\";","import React from \"react\";\nimport {\n  Button,\n  Form,\n  Grid,\n  Header,\n  Message,\n  Segment\n} from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { NavLink, Redirect } from \"react-router-dom\";\nimport { authLogin } from \"../store/actions/auth\";\n\nclass LoginForm extends React.Component {\n  state = {\n    username: \"\",\n    password: \"\"\n  };\n\n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { username, password } = this.state;\n    this.props.login(username, password);\n  };\n\n  render() {\n    const { error, loading, token } = this.props;\n    const { username, password } = this.state;\n    if (token) {\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <Grid\n        textAlign=\"center\"\n        style={{ height: \"100vh\" }}\n        verticalAlign=\"middle\"\n      >\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as=\"h2\" color=\"teal\" textAlign=\"center\">\n            Log-in to your account\n          </Header>\n          {error && <p>{this.props.error.message}</p>}\n\n          <React.Fragment>\n            <Form size=\"large\" onSubmit={this.handleSubmit}>\n              <Segment stacked>\n                <Form.Input\n                  onChange={this.handleChange}\n                  value={username}\n                  name=\"username\"\n                  fluid\n                  icon=\"user\"\n                  iconPosition=\"left\"\n                  placeholder=\"Username\"\n                />\n                <Form.Input\n                  onChange={this.handleChange}\n                  fluid\n                  value={password}\n                  name=\"password\"\n                  icon=\"lock\"\n                  iconPosition=\"left\"\n                  placeholder=\"Password\"\n                  type=\"password\"\n                />\n\n                <Button\n                  color=\"teal\"\n                  fluid\n                  size=\"large\"\n                  loading={loading}\n                  disabled={loading}\n                >\n                  Login\n                </Button>\n              </Segment>\n            </Form>\n            <Message>\n              New to us? <NavLink to=\"/signup\">Sign Up</NavLink>\n            </Message>\n          </React.Fragment>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.auth.loading,\n    error: state.auth.error,\n    token: state.auth.token\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    login: (username, password) => dispatch(authLogin(username, password))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LoginForm);\n\n\n\n","import React from 'react';\nimport axios from 'axios';\n\nimport { Card } from 'antd';\nimport {Grid, Image, Segment, Button, Progress, Label, Container} from 'semantic-ui-react'\nimport Intro from './chart/intro';\nimport OrderBook from './OrderBook/OrderBookHistory'\nimport OrderForm from '../components/OrderForm';\nimport OutcomeList from './OutcomeListView';\nimport connect from \"react-redux/es/connect/connect\";\n// import { Redirect } from \"react-router-dom\";\nimport Login from './Login';\nimport PublicWebSocketInstance from \"../websocket_anon\";\nimport { HOST_URL } from '../settings';\n\n\nclass ProposalDetail extends React.Component {\n\n  // initialiseChat() {\n  //   const proposalID = this.props.match.params.marketID;\n  //   this.waitForSocketConnection(() => {\n  //     PublicWebSocketInstance.newChannel(\n  //       proposalID\n  //     );\n  //   });\n  //   PublicWebSocketInstance.connect();\n  // }\n\n  constructor(props) {\n    super(props);\n\n    // this.initialiseChat();\n    PublicWebSocketInstance.addCallbacks(this.setMessages.bind(this));\n\n    this.handler = this.handler.bind(this)\n  }\n\n  // waitForSocketConnection(callback) {\n  //   const component = this;\n  //   setTimeout(function() {\n  //     if (PublicWebSocketInstance.state() === 1) {\n  //       console.log(\"Connection is made\");\n  //       callback();\n  //       return;\n  //     } else {\n  //       console.log(\"wait for connection...\");\n  //       component.waitForSocketConnection(callback);\n  //     }\n  //   }, 100);\n  // }\n\n  setMessages(data, orders) {\n    if (this.state.id === undefined || this.state.descr === undefined) {\n      this.setState({\n        descr: data.outcomes[0].description,\n        id: data.outcomes[0].id\n      })\n    }\n    this.setState({\n      proposal: data,\n      outcomes: data.outcomes,\n      orders: orders\n    });\n  }\n\n  handler(id, value) {\n    this.setState({\n      id: id,\n      descr: value\n    });\n  }\n\n  state = {\n    proposal: [],\n    outcomes: ['null'],\n    orders: []\n  };\n\n  test() {\n    // if (this.state.id)\n    // const proposalID = this.props.match.params.proposalID;\n\n    const proposalID = this.props.match.params.marketID;\n    // axios.get(`http://127.0.0.1:8000/api/auth/user/`, {headers: {\n    //         \"Content-Type\": \"application/json\",\n    //         Authorization: `Token ${this.props.token}`\n    //     }})\n    // .then(res => {\n    //     this.setState({\n    //         auth: res.data,\n    //         wallet: res.data.wallet\n    //     });\n    // });\n\n    axios.get(`${HOST_URL}/api/markets/${proposalID}/`\n      , {headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${this.props.token}`\n        }}\n    )\n      .then(res => {\n        // if (!res.data.proposal) {\n        //     res.data = []\n        //     // тут нужно вызвать ошибку, there is no such proposal\n        // }\n        this.setState({\n          proposal: res.data,\n          outcomes: res.data.outcomes,\n          // descr: res.data.outcomes[0].description,\n          // id: res.data.outcomes[0].id\n        });\n\n        if (this.state.id === undefined || this.state.descr === undefined) {\n          this.setState({\n            descr: res.data.outcomes[0].description,\n            id: res.data.outcomes[0].id\n          })\n        }\n      }).catch(err => console.log(\"error \" + err));\n  }\n\n  componentDidMount() {\n    const proposalID = this.props.match.params.marketID;\n    PublicWebSocketInstance.connect(proposalID);\n    // PublicWebSocketInstance.newChannel(proposalID);\n\n    // const proposalID = this.props.match.params.proposalID;\n    // axios.get(`http://127.0.0.1:8000/api/markets/${proposalID}/`\n    //     , {headers: {\n    //             \"Content-Type\": \"application/json\",\n    //             Authorization: `Token ${this.props.token}`\n    //         }}\n    //         )\n    //     .then(res => {\n    //         // if (!res.data.proposal) {\n    //         //     res.data = []\n    //         //     // тут нужно вызвать ошибку, there is no such proposal\n    //         // }\n    //         this.setState({\n    //             proposal: res.data,\n    //             outcomes: res.data.outcomes,\n    //             descr: res.data.outcomes[0].description,\n    //             id: res.data.outcomes[0].id\n    //         });\n    //     }).catch(err => console.log(\"error \" + err));\n\n    if (this.props.token) {\n\n      // this.test();\n      // this.timer = setInterval(() => this.test(), 500);\n    }\n  }\n\n  componentWillUnmount() {\n    // this.timer = null;\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props !== prevProps)\n    {\n      // const proposalID = this.props.match.params.proposalID;\n      // axios.get(`http://127.0.0.1:8000/api/markets/${proposalID}/`, {headers: {\n      //         \"Content-Type\": \"application/json\",\n      //         Authorization: `Token ${this.props.token}`\n      //     }})\n      // .then(res => {\n      //     this.setState({\n      //         proposal: res.data,\n      //         outcomes: res.data.outcomes,\n      //         descr: res.data.outcomes[0].description,\n      //         id: res.data.outcomes[0].id\n      //     });\n      // }).catch(err => console.log(\"error \" + err));\n      if (this.props.token) {\n        // this.test();\n        // this.timer = setInterval(() => this.test(), 500);\n      }\n\n      // if (this.props.token) {\n      //     this.timer = setInterval(() => this.test(), 500);\n      // }\n    }\n  }\n\n  render () {\n    // WebSocketInstance.connect(this.props.token, this.props.userID);\n    // if (this.props.token == null) {\n    // \t// return <Redirect to=\"/login\" />;\n    //     return <Login/>\n    // }\n\n    return (\n      <div>\n        <br/><br/><br/>\n        <Grid columns={3}>\n          <Grid.Column floated={\"left\"}>\n            <Segment>\n\n              <Intro\n                outcome={this.state.id}\n              />\n\n            </Segment>\n\n          </Grid.Column>\n\n          <Grid.Column stretched width={6}>\n            <Segment>\n\n              <Card title={`${this.state.proposal.name}?`}>\n                <p/>\n                <p>{this.state.proposal.description}</p>\n              </Card>\n\n            </Segment>\n            <Segment>\n\n              <OrderForm\n                requestType=\"post\"\n                outcome={this.state.id}\n                descr={this.state.descr}\n                userID={this.props.userID}\n              />\n\n            </Segment>\n\n            <Segment>\n\n              <OrderBook\n                outcome={this.state.id} orders={this.state.orders}\n              />\n\n            </Segment>\n\n          </Grid.Column>\n\n          <Grid.Column floated={\"right\"} width={4}>\n\n            <OutcomeList data={this.state.outcomes} handler={this.handler} wallet={this.props.wallet}/>\n\n          </Grid.Column>\n        </Grid>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token,\n    userID: state.auth.userID,\n    wallet: state.auth.wallet,\n  };\n};\n\nexport default connect(mapStateToProps)(ProposalDetail);\n","import React from 'react';\nimport CustomForm from '../components/Form';\n\nclass ProposalCreate extends React.Component {\n\n    state = {\n        proposals: []\n    };\n\n    render () {\n        return (\n            <div>\n                <h2>Create a proposal</h2>\n                <CustomForm\n                    requestType=\"post\"\n                    btnText=\"Create\"/>\n            </div>\n        )\n    }\n}\n\nexport default ProposalCreate;","import React from \"react\";\nimport {\n  Button,\n  Form,\n  Grid,\n  Header,\n  Message,\n  Segment\n} from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { NavLink, Redirect } from \"react-router-dom\";\nimport { authSignup } from \"../store/actions/auth\";\n\nclass RegistrationForm extends React.Component {\n  state = {\n    username: \"\",\n    email: \"\",\n    password1: \"\",\n    password2: \"\"\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { username, email, password1, password2 } = this.state;\n    this.props.signup(username, email, password1, password2);\n  };\n\n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  render() {\n    const { username, email, password1, password2 } = this.state;\n    const { error, loading, token } = this.props;\n    if (token) {\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <Grid\n        textAlign=\"center\"\n        style={{ height: \"100vh\" }}\n        verticalAlign=\"middle\"\n      >\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as=\"h2\" color=\"teal\" textAlign=\"center\">\n            Signup to your account\n          </Header>\n          {error && <p>{this.props.error.message}</p>}\n\n          <React.Fragment>\n            <Form size=\"large\" onSubmit={this.handleSubmit}>\n              <Segment stacked>\n                <Form.Input\n                  onChange={this.handleChange}\n                  value={username}\n                  name=\"username\"\n                  fluid\n                  icon=\"user\"\n                  iconPosition=\"left\"\n                  placeholder=\"Username\"\n                />\n                <Form.Input\n                  onChange={this.handleChange}\n                  value={email}\n                  name=\"email\"\n                  fluid\n                  icon=\"mail\"\n                  iconPosition=\"left\"\n                  placeholder=\"E-mail address\"\n                />\n                <Form.Input\n                  onChange={this.handleChange}\n                  fluid\n                  value={password1}\n                  name=\"password1\"\n                  icon=\"lock\"\n                  iconPosition=\"left\"\n                  placeholder=\"Password\"\n                  type=\"password\"\n                />\n                <Form.Input\n                  onChange={this.handleChange}\n                  fluid\n                  value={password2}\n                  name=\"password2\"\n                  icon=\"lock\"\n                  iconPosition=\"left\"\n                  placeholder=\"Confirm password\"\n                  type=\"password\"\n                />\n\n                <Button\n                  color=\"teal\"\n                  fluid\n                  size=\"large\"\n                  loading={loading}\n                  disabled={loading}\n                >\n                  Signup\n                </Button>\n              </Segment>\n            </Form>\n            <Message>\n              Already have an account? <NavLink to=\"/login\">Login</NavLink>\n            </Message>\n          </React.Fragment>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.auth.loading,\n    error: state.auth.error,\n    token: state.auth.token\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signup: (username, email, password1, password2) =>\n      dispatch(authSignup(username, email, password1, password2))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RegistrationForm);","import PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport {\n  Button,\n  Container,\n  Divider,\n  Grid,\n  Header,\n  Icon,\n  Image,\n  List,\n  Menu,\n  Responsive,\n  Segment,\n  Sidebar,\n  Visibility\n} from \"semantic-ui-react\";\nimport logo from './000_01_AE_Aeneas.png';\n\nconst getWidth = () => {\n  const isSSR = typeof window === \"undefined\";\n  return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth;\n};\n\nclass DesktopContainer extends Component {\n  state = {};\n\n  hideFixedMenu = () => this.setState({ fixed: false });\n  showFixedMenu = () => this.setState({ fixed: true });\n\n  render() {\n    const { children } = this.props;\n    const { fixed } = this.state;\n\n    return (\n      <Responsive getWidth={getWidth} minWidth={Responsive.onlyTablet.minWidth}>\n        <Visibility\n          once={false}\n          onBottomPassed={this.showFixedMenu}\n          onBottomPassedReverse={this.hideFixedMenu}\n        />\n        {children}\n      </Responsive>\n    );\n  }\n}\n\nDesktopContainer.propTypes = {\n  children: PropTypes.node\n};\n\nclass MobileContainer extends Component {\n  state = {};\n\n  handleSidebarHide = () => this.setState({ sidebarOpened: false });\n\n  handleToggle = () => this.setState({ sidebarOpened: true });\n\n  render() {\n    const { children } = this.props;\n    const { sidebarOpened } = this.state;\n\n    return (\n      <Responsive\n        as={Sidebar.Pushable}\n        getWidth={getWidth}\n        maxWidth={Responsive.onlyMobile.maxWidth}\n      >\n        {children}\n      </Responsive>\n    );\n  }\n}\n\nMobileContainer.propTypes = {\n  children: PropTypes.node\n};\n\nconst ResponsiveContainer = ({ children }) => (\n  <div>\n    <DesktopContainer>{children}</DesktopContainer>\n    <MobileContainer>{children}</MobileContainer>\n  </div>\n);\n\nResponsiveContainer.propTypes = {\n  children: PropTypes.node\n};\n\nconst HomepageLayout = () => (\n  <ResponsiveContainer>\n    <Segment style={{ padding: \"8em 0em\" }} vertical>\n      <Grid container stackable verticalAlign=\"middle\">\n        <Grid.Row>\n          <Grid.Column width={8}>\n            <Header as=\"h3\" style={{ fontSize: \"2em\" }}>\n              Aeneas Decentralized Oracle\n            </Header>\n            <p style={{ fontSize: \"1.33em\" }}>\n              Our prediction market platforms allow anyone to utilize forecasting applications.\n                These applications produce an entirely new asset class: conditional tokens,\n                which make event outcomes tradeable and are also a powerful tool for information discovery.\n            </p>\n            <Header as=\"h3\" style={{ fontSize: \"2em\" }}>\n              Prediction Markets Based On LMSR\n            </Header>\n            <p style={{ fontSize: \"1.33em\" }}>\n              Kyiv Blockchain Forum 2019\n            </p>\n          </Grid.Column>\n          <Grid.Column floated=\"right\" width={6}>\n            <Image\n              bordered\n              rounded\n              size=\"large\"\n              src={logo}\n            />\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Column textAlign=\"center\">\n            <Button size=\"huge\">Check Active Markets</Button>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </Segment>\n    {/*<Segment style={{ padding: \"0em\" }} vertical>\n      <Grid celled=\"internally\" columns=\"equal\" stackable>\n        <Grid.Row textAlign=\"center\">\n          <Grid.Column style={{ paddingBottom: \"5em\", paddingTop: \"5em\" }}>\n            <Header as=\"h3\" style={{ fontSize: \"2em\" }}>\n              \"What a Company\"\n            </Header>\n            <p style={{ fontSize: \"1.33em\" }}>\n              That is what they all say about us\n            </p>\n          </Grid.Column>\n          <Grid.Column style={{ paddingBottom: \"5em\", paddingTop: \"5em\" }}>\n            <Header as=\"h3\" style={{ fontSize: \"2em\" }}>\n              \"I shouldn't have gone with their competitor.\"\n            </Header>\n            <p style={{ fontSize: \"1.33em\" }}>\n              <Image avatar src=\"/images/avatar/large/nan.jpg\" />\n              <b>Nan</b> Chief Fun Officer Acme Toys\n            </p>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </Segment>*/}\n    {/*<Segment style={{ padding: \"8em 0em\" }} vertical>\n      <Container text>\n        <Header as=\"h3\" style={{ fontSize: \"2em\" }}>\n          Breaking The Grid, Grabs Your Attention\n        </Header>\n        <p style={{ fontSize: \"1.33em\" }}>\n          Instead of focusing on content creation and hard work, we have learned\n          how to master the art of doing nothing by providing massive amounts of\n          whitespace and generic content that can seem massive, monolithic and\n          worth your attention.\n        </p>\n        <Button as=\"a\" size=\"large\">\n          Read More\n        </Button>\n        <Divider\n          as=\"h4\"\n          className=\"header\"\n          horizontal\n          style={{ margin: \"3em 0em\", textTransform: \"uppercase\" }}\n        >\n          <a href=\"#\">Case Studies</a>\n        </Divider>\n        <Header as=\"h3\" style={{ fontSize: \"2em\" }}>\n          Did We Tell You About Our Bananas?\n        </Header>\n        <p style={{ fontSize: \"1.33em\" }}>\n          Yes I know you probably disregarded the earlier boasts as non-sequitur\n          filler content, but it's really true. It took years of gene splicing\n          and combinatory DNA research, but our bananas can really dance.\n        </p>\n        <Button as=\"a\" size=\"large\">\n          I'm Still Quite Interested\n        </Button>\n      </Container>\n    </Segment>*/}\n  </ResponsiveContainer>\n);\nexport default HomepageLayout;\n\n","const Hoc = props => props.children;\n\nexport default Hoc;","import React from 'react';\nimport { Route } from 'react-router-dom';\n\nimport MarketList from './containers/MarketListView';\nimport MarketDetail from \"./containers/MarketDetailView\";\nimport ProposalList from \"./containers/ProposalListView\";\nimport ProposalDetail from \"./containers/ProposalDetailView\";\nimport ProposalCreate from \"./containers/ProposalCreateView\";\nimport Login from './containers/Login';\nimport Signup from './containers/Signup';\nimport HomepageLayout from './containers/Home';\nimport Hoc from './hoc/hoc';\n\nconst BaseRouter = () => (\n    <Hoc>\n        {/*<Route exact path='/markets/' component={MarketList}/>*/}\n        <Route exact path='/markets/' component={ProposalList}/>\n        {/*<Route exact path='/markets/:marketID' component={MarketDetail}/>*/}\n        <Route exact path='/markets/:marketID' component={ProposalDetail}/>\n        {/*<Route exact path='/proposals/' component={ProposalList}/>*/}\n        {/*<Route exact path='/proposals/:proposalID' component={ProposalDetail}/>*/}\n        <Route exact path='/proposal/create/' component={ProposalCreate}/>\n        <Route path='/login' component={Login}/>\n        <Route path='/signup' component={Signup}/>\n        <Route exact path='/' component={HomepageLayout}/>\n    </Hoc>\n);\n\nexport default BaseRouter;","import React from \"react\";\nimport {\n  Container,\n  Divider,\n  Dropdown,\n  Grid,\n  Header,\n  Image,\n  List,\n  Menu,\n  Segment\n} from \"semantic-ui-react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../store/actions/auth\";\n\nfunction decimalAdjust(type, value, exp) {\n    // Если степень не определена, либо равна нулю...\n    if (typeof exp === 'undefined' || +exp === 0) {\n      return Math[type](value);\n    }\n    value = +value;\n    exp = +exp;\n    // Если значение не является числом, либо степень не является целым числом...\n    if (isNaN(value) || !(typeof exp === 'number' && exp % 1 === 0)) {\n      return NaN;\n    }\n    // Сдвиг разрядов\n    value = value.toString().split('e');\n    value = Math[type](+(value[0] + 'e' + (value[1] ? (+value[1] - exp) : -exp)));\n    // Обратный сдвиг\n    value = value.toString().split('e');\n    return +(value[0] + 'e' + (value[1] ? (+value[1] + exp) : exp));\n  }\n\nfunction round(value, exp) {\n  return decimalAdjust('round', value, exp);\n}\n\nclass CustomLayout extends React.Component {\n\n  render() {\n      const { authenticated, username, cash } = this.props;\n\n      return (\n      <div>\n        <Menu fixed=\"top\" inverted size={\"large\"}>\n          {/*<Container>*/}\n          <Container>\n              {authenticated ? (\n                  <Link to=\"/\">\n                      <Menu.Item header>Profile</Menu.Item>\n                  </Link>\n              ) : (<Link to=\"/\">\n                  <Menu.Item header>Home</Menu.Item>\n              </Link>)}\n              {authenticated ? (\n                  <React.Fragment>\n                      {/*<Link to=\"/proposals/\">\n                          <Menu.Item header>Proposal</Menu.Item>\n                      </Link>*/}\n                      <Link to=\"/markets/\">\n                          <Menu.Item header>Markets</Menu.Item>\n                      </Link>\n                      {/*<Menu.Item header onClick={() => this.props.logout()}>*/}\n                          {/*Logout*/}\n                      {/*</Menu.Item>*/}\n                  </React.Fragment>\n              ) : (\n                  <React.Fragment>\n                    {/*<Link to=\"/proposals/\">\n                        <Menu.Item header>Proposal</Menu.Item>\n                    </Link>*/}\n                    <Link to=\"/markets/\">\n                        <Menu.Item header>Markets</Menu.Item>\n                    </Link>\n                      {/*<Link to=\"/login\">\n                          <Menu.Item header>Login</Menu.Item>\n                      </Link>\n                      <Link to=\"/signup\">\n                          <Menu.Item header>Signup</Menu.Item>\n                      </Link>*/}\n                  </React.Fragment>\n              )}\n          </Container>\n\n              {authenticated ? (\n                  <React.Fragment>\n                      <Menu.Menu position={'right'}>\n                      <Menu.Item>\n                          {username}\n                      </Menu.Item>\n                      <Menu.Item>\n                          Гаманець: {round(cash, -2)}$\n                      </Menu.Item>\n                      <Menu.Item header onClick={() => this.props.logout()}>\n                        Logout\n                      </Menu.Item>\n                      </Menu.Menu>\n                  </React.Fragment>\n              ) : (\n                  <React.Fragment>\n                    <Link to=\"/login\">\n                        <Menu.Item header>Login</Menu.Item>\n                    </Link>\n                    <Link to=\"/signup\">\n                        <Menu.Item header>Signup</Menu.Item>\n                    </Link>\n                  </React.Fragment>\n              )}\n\n          {/*</Container>*/}\n        </Menu>\n\n        {this.props.children}\n\n        <Segment\n          inverted\n          vertical\n          style={{ margin: \"5em 0em 0em\", padding: \"5em 0em\" }}\n        >\n          {/*<Container textAlign=\"center\">\n            <Grid divided inverted stackable>\n              <Grid.Column width={3}>\n                <Header inverted as=\"h4\" content=\"Group 1\" />\n                <List link inverted>\n                  <List.Item as=\"a\">Link One</List.Item>\n                  <List.Item as=\"a\">Link Two</List.Item>\n                  <List.Item as=\"a\">Link Three</List.Item>\n                  <List.Item as=\"a\">Link Four</List.Item>\n                </List>\n              </Grid.Column>\n              <Grid.Column width={3}>\n                <Header inverted as=\"h4\" content=\"Group 2\" />\n                <List link inverted>\n                  <List.Item as=\"a\">Link One</List.Item>\n                  <List.Item as=\"a\">Link Two</List.Item>\n                  <List.Item as=\"a\">Link Three</List.Item>\n                  <List.Item as=\"a\">Link Four</List.Item>\n                </List>\n              </Grid.Column>\n              <Grid.Column width={3}>\n                <Header inverted as=\"h4\" content=\"Group 3\" />\n                <List link inverted>\n                  <List.Item as=\"a\">Link One</List.Item>\n                  <List.Item as=\"a\">Link Two</List.Item>\n                  <List.Item as=\"a\">Link Three</List.Item>\n                  <List.Item as=\"a\">Link Four</List.Item>\n                </List>\n              </Grid.Column>\n              <Grid.Column width={7}>\n                <Header inverted as=\"h4\" content=\"Footer Header\" />\n                <p>\n                  Extra space for a call to action inside the footer that could\n                  help re-engage users.\n                </p>\n              </Grid.Column>\n            </Grid>\n\n            <Divider inverted section />\n            <Image centered size=\"mini\" src=\"/logo.png\" />\n            <List horizontal inverted divided link size=\"small\">\n              <List.Item as=\"a\" href=\"#\">\n                Site Map\n              </List.Item>\n              <List.Item as=\"a\" href=\"#\">\n                Contact Us\n              </List.Item>\n              <List.Item as=\"a\" href=\"#\">\n                Terms and Conditions\n              </List.Item>\n              <List.Item as=\"a\" href=\"#\">\n                Privacy Policy\n              </List.Item>\n            </List>\n          </Container>*/}\n        </Segment>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    authenticated: state.auth.token !== null,\n      username: state.auth.username,\n      cash: state.auth.cash\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    logout: () => dispatch(logout())\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(CustomLayout)\n);\n\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport BaseRouter from \"./routes\";\nimport * as actions from \"./store/actions/auth\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport CustomLayout from \"./containers/Layout\";\nimport WebSocketInstance from \"./websocket\";\n\n\nclass App extends Component {\n\n  componentDidMount() {\n    if (!this.props.isAuthenticated) {\n      this.props.onTryAutoSignup();\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    WebSocketInstance.addCallbacks(this.props.setProfile.bind(this));\n  }\n\n  render() {\n    return (\n      <Router>\n        <CustomLayout {...this.props}>\n          <BaseRouter/>\n        </CustomLayout>\n      </Router>\n    );\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState()),\n    setProfile: (username, cash, wallet) => dispatch(actions.authUpdate(username, cash, wallet))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const updateObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n    }\n};","import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\n\nconst initialState = {\n  token: null,\n  error: null,\n  loading: false,\n  username: null,\n  cash: null,\n  userID: null,\n  wallet: null\n};\n\nconst authStart = (state, action) => {\n  return updateObject(state, {\n    error: null,\n    loading: true\n  });\n};\n\nconst authSuccess = (state, action) => {\n  return updateObject(state, {\n    token: action.token,\n    error: null,\n    loading: false,\n    username: action.username,\n    cash: action.cash,\n    userID: action.userID,\n  });\n};\n\nconst authFail = (state, action) => {\n  return updateObject(state, {\n    error: action.error,\n    loading: false\n  });\n};\n\nconst authLogout = (state, action) => {\n  return updateObject(state, {\n    token: null,\n    username: null,\n    cash: null,\n    userID: null,\n    wallet: null,\n  });\n};\n\nconst authUpdate = (state, action) => {\n  return updateObject(state, {\n    username: action.username,\n    cash: action.cash,\n    wallet: action.wallet\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.AUTH_START:\n      return authStart(state, action);\n    case actionTypes.AUTH_SUCCESS:\n      return authSuccess(state, action);\n    case actionTypes.AUTH_FAIL:\n      return authFail(state, action);\n    case actionTypes.AUTH_LOGOUT:\n      return authLogout(state, action);\n    case actionTypes.AUTH_UPDATE:\n      return authUpdate(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, compose, applyMiddleware, combineReducers } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\n\nimport authReducer from \"./store/reducers/auth\";\n// import messageReducer from \"./store/reducers/message\";\n\nconst composeEnhances = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n    // message: messageReducer\n});\n\nconst store = createStore(rootReducer, composeEnhances(applyMiddleware(thunk)));\n\nconst app = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\nserviceWorker.unregister();"],"sourceRoot":""}